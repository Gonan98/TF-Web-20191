// <auto-generated />
using System;
using Estacionamiento.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Estacionamiento.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190620223852_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Estacionamiento.Domain.Cajero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreCajero");

                    b.Property<int>("PuntoAtencionId");

                    b.Property<string>("TurnoCajero");

                    b.HasKey("Id");

                    b.HasIndex("PuntoAtencionId");

                    b.ToTable("Cajeros");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Comprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngresoId");

                    b.Property<double>("Monto");

                    b.Property<DateTime>("horaFin");

                    b.Property<DateTime>("horaIni");

                    b.HasKey("Id");

                    b.HasIndex("IngresoId");

                    b.ToTable("Comprobantes");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Espacio", b =>
                {
                    b.Property<int>("EspacioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Disponible");

                    b.Property<int>("EstacionamientosId");

                    b.HasKey("EspacioId");

                    b.HasIndex("EstacionamientosId");

                    b.ToTable("Espacios");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Estacionamientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<int>("LocalizacionId");

                    b.Property<string>("Nombre_Estacionamiento");

                    b.Property<int>("Numero_Espacios");

                    b.HasKey("Id");

                    b.HasIndex("LocalizacionId");

                    b.ToTable("estacionamientos");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Ingreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CajeroId");

                    b.Property<int>("EspacioId");

                    b.Property<DateTime>("HInicio");

                    b.Property<string>("Placa")
                        .IsRequired();

                    b.Property<int>("TarifaId");

                    b.HasKey("Id");

                    b.HasIndex("CajeroId");

                    b.HasIndex("TarifaId");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Localizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreLocalizacion");

                    b.HasKey("Id");

                    b.ToTable("Localizaciones");
                });

            modelBuilder.Entity("Estacionamiento.Domain.PuntoAtencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ubicacion");

                    b.HasKey("Id");

                    b.ToTable("PuntoAtenciones");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Tarifa", b =>
                {
                    b.Property<int>("TarifaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Monto");

                    b.Property<string>("TipoVehiculo");

                    b.HasKey("TarifaId");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Cajero", b =>
                {
                    b.HasOne("Estacionamiento.Domain.PuntoAtencion", "PuntoAtencion")
                        .WithMany("Cajeros")
                        .HasForeignKey("PuntoAtencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Estacionamiento.Domain.Comprobante", b =>
                {
                    b.HasOne("Estacionamiento.Domain.Ingreso", "Ingreso")
                        .WithMany()
                        .HasForeignKey("IngresoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Estacionamiento.Domain.Espacio", b =>
                {
                    b.HasOne("Estacionamiento.Domain.Estacionamientos", "Estacionamientos")
                        .WithMany()
                        .HasForeignKey("EstacionamientosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Estacionamiento.Domain.Estacionamientos", b =>
                {
                    b.HasOne("Estacionamiento.Domain.Localizacion", "Localizacion")
                        .WithMany()
                        .HasForeignKey("LocalizacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Estacionamiento.Domain.Ingreso", b =>
                {
                    b.HasOne("Estacionamiento.Domain.Cajero", "Cajero")
                        .WithMany()
                        .HasForeignKey("CajeroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Estacionamiento.Domain.Tarifa", "Tarifa")
                        .WithMany()
                        .HasForeignKey("TarifaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Estacionamiento.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Estacionamiento.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Estacionamiento.Domain.Cajero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Cajero");

                    b.Property<int>("PuntoAtencionId");

                    b.Property<string>("Turno_Cajero");

                    b.HasKey("Id");

                    b.HasIndex("PuntoAtencionId");

                    b.ToTable("cajeros");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Estacionamientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre_Estacionamiento");

                    b.Property<int>("Numero_Espacios");

                    b.Property<int>("localizacion_id");

                    b.HasKey("Id");

                    b.ToTable("estacionamientos");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Ingreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CajeroId1");

                    b.Property<DateTime>("HInicio");

                    b.Property<string>("Placa")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CajeroId1");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Localizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Localizacion");

                    b.HasKey("Id");

                    b.ToTable("localizaciones");
                });

            modelBuilder.Entity("Estacionamiento.Domain.PuntoAtencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ubicacion");

                    b.HasKey("Id");

                    b.ToTable("PuntoAtencion");
                });

            modelBuilder.Entity("Estacionamiento.Domain.Cajero", b =>
                {
                    b.HasOne("Estacionamiento.Domain.PuntoAtencion", "puntoAtencion")
                        .WithMany("Cajeros")
                        .HasForeignKey("PuntoAtencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Estacionamiento.Domain.Ingreso", b =>
                {
                    b.HasOne("Estacionamiento.Domain.Cajero", "Cajero")
                        .WithMany()
                        .HasForeignKey("CajeroId1");
                });
#pragma warning restore 612, 618
        }
    }
}
